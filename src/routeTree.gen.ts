/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppDisImport } from './routes/_app/dis'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as AppScheduleIndexImport } from './routes/_app/schedule/index'
import { Route as AppClientsIndexImport } from './routes/_app/clients/index'
import { Route as AppClientsNewImport } from './routes/_app/clients/new'
import { Route as AppClientsClientIdIndexImport } from './routes/_app/clients/$clientId/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDisRoute = AppDisImport.update({
  id: '/dis',
  path: '/dis',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppScheduleIndexRoute = AppScheduleIndexImport.update({
  id: '/schedule/',
  path: '/schedule/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppClientsIndexRoute = AppClientsIndexImport.update({
  id: '/clients/',
  path: '/clients/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppClientsNewRoute = AppClientsNewImport.update({
  id: '/clients/new',
  path: '/clients/new',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppClientsClientIdIndexRoute = AppClientsClientIdIndexImport.update({
  id: '/clients/$clientId/',
  path: '/clients/$clientId/',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/dis': {
      id: '/_app/dis'
      path: '/dis'
      fullPath: '/dis'
      preLoaderRoute: typeof AppDisImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/clients/new': {
      id: '/_app/clients/new'
      path: '/clients/new'
      fullPath: '/clients/new'
      preLoaderRoute: typeof AppClientsNewImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/clients/': {
      id: '/_app/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof AppClientsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/schedule/': {
      id: '/_app/schedule/'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof AppScheduleIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/clients/$clientId/': {
      id: '/_app/clients/$clientId/'
      path: '/clients/$clientId'
      fullPath: '/clients/$clientId'
      preLoaderRoute: typeof AppClientsClientIdIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppDisRoute: typeof AppDisRoute
  AppIndexRoute: typeof AppIndexRoute
  AppClientsNewRoute: typeof AppClientsNewRoute
  AppClientsIndexRoute: typeof AppClientsIndexRoute
  AppScheduleIndexRoute: typeof AppScheduleIndexRoute
  AppClientsClientIdIndexRoute: typeof AppClientsClientIdIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppDisRoute: AppDisRoute,
  AppIndexRoute: AppIndexRoute,
  AppClientsNewRoute: AppClientsNewRoute,
  AppClientsIndexRoute: AppClientsIndexRoute,
  AppScheduleIndexRoute: AppScheduleIndexRoute,
  AppClientsClientIdIndexRoute: AppClientsClientIdIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/about': typeof AppAboutRoute
  '/dis': typeof AppDisRoute
  '/': typeof AppIndexRoute
  '/clients/new': typeof AppClientsNewRoute
  '/clients': typeof AppClientsIndexRoute
  '/schedule': typeof AppScheduleIndexRoute
  '/clients/$clientId': typeof AppClientsClientIdIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/about': typeof AppAboutRoute
  '/dis': typeof AppDisRoute
  '/': typeof AppIndexRoute
  '/clients/new': typeof AppClientsNewRoute
  '/clients': typeof AppClientsIndexRoute
  '/schedule': typeof AppScheduleIndexRoute
  '/clients/$clientId': typeof AppClientsClientIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/about': typeof AppAboutRoute
  '/_app/dis': typeof AppDisRoute
  '/_app/': typeof AppIndexRoute
  '/_app/clients/new': typeof AppClientsNewRoute
  '/_app/clients/': typeof AppClientsIndexRoute
  '/_app/schedule/': typeof AppScheduleIndexRoute
  '/_app/clients/$clientId/': typeof AppClientsClientIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/about'
    | '/dis'
    | '/'
    | '/clients/new'
    | '/clients'
    | '/schedule'
    | '/clients/$clientId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/about'
    | '/dis'
    | '/'
    | '/clients/new'
    | '/clients'
    | '/schedule'
    | '/clients/$clientId'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/_app/about'
    | '/_app/dis'
    | '/_app/'
    | '/_app/clients/new'
    | '/_app/clients/'
    | '/_app/schedule/'
    | '/_app/clients/$clientId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/about",
        "/_app/dis",
        "/_app/",
        "/_app/clients/new",
        "/_app/clients/",
        "/_app/schedule/",
        "/_app/clients/$clientId/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/dis": {
      "filePath": "_app/dis.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/clients/new": {
      "filePath": "_app/clients/new.tsx",
      "parent": "/_app"
    },
    "/_app/clients/": {
      "filePath": "_app/clients/index.tsx",
      "parent": "/_app"
    },
    "/_app/schedule/": {
      "filePath": "_app/schedule/index.tsx",
      "parent": "/_app"
    },
    "/_app/clients/$clientId/": {
      "filePath": "_app/clients/$clientId/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
